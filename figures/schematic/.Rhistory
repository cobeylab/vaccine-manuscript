library(RSQLite)
library(ggplot2)
library(sensitivity)
library(gridExtra)
library(grid)
library(scales)
library(viridis)
library(plyr)
library(cowplot)
textSize = 12
pointSize = 1.0
lineSize = 1
plotDirectory='./'
resultsDir = '../../analysis/breadth_1_density/vaccine/'
plot_themes  = 	theme_classic() +
theme(axis.line = element_line(size=1)) +
theme(axis.ticks = element_line(size=0.5)) +
theme(axis.ticks.length = unit(-0.1,'cm')) +
theme(axis.title.x=element_text(size=textSize)) +
theme(axis.text.x=element_text(size= textSize, margin=margin(5,5,5,5,'pt'))) +
theme(axis.title.y=element_text(size= textSize)) +
theme(axis.text.y=element_text(size= textSize, margin=margin(5,5,5,5,'pt'))) +
theme(plot.title=element_text(size=textSize+2)) +
theme(plot.margin=unit(c(5,5,5,5),'mm')) +
theme(legend.title=element_text(size=textSize)) +
theme(legend.text=element_text(size=textSize)) +
theme(legend.position ='bottom') +
theme(legend.direction='horizontal') +
theme(legend.margin = unit(0.2,'cm')) +
theme(legend.box = "vertical") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1)) +
theme(axis.line = element_blank())
lag = 300
window = 120
b = 0.5
s = 0.07
makeMutationPlot = function(){
delta.mean = .6
delta.sd = .3
alpha = (delta.mean*delta.mean)/(delta.sd*delta.sd)
beta = (delta.sd*delta.sd)/(delta.mean)
dat = rgamma(1e6, shape = alpha, rate=1/beta)
df = data.frame(dat)
df = data.frame(x=seq(0,4,length=1000))
plot = ggplot(df,aes(x=x)) +  stat_function(fun = dgamma, args = list(shape=alpha, rate = 1/beta)) +
xlab('Antigenic distance of mutation') +
ylab('Density') +
plot_themes
return(plot)
}
makeBreadthPlot = function() {
d = seq(0,20,length = 500)
P.I.nat = s * d
P.I.vac = s * d / b
df = data.frame(d,P.I.nat,P.I.vac)
df$P.I.nat = ifelse(P.I.nat>1, 1, P.I.nat)
df$P.I.vac = ifelse(P.I.vac>1, 1, P.I.vac)
plot = ggplot(data = df) +
geom_line(aes(x = d,y = P.I.vac, color = 'Vaccine'), size = 1) +
geom_line(aes(x = d,y = P.I.nat, color = 'Natural'), size = 1) +
xlab('Nearest antigenic distance') +
ylab('Pr(infection | contact)') +
scale_color_manual(name='Type of immunity', values=c('Natural' = 'red', 'Vaccine' = 'purple')) +
guides(colour = guide_legend(override.aes = list(linetype=c(1,1)), title.position = 'top')) +
plot_themes +
theme(legend.direction='vertical') +
theme(legend.position=c(.7,.2))+
theme(legend.title=element_text(size=textSize-2)) +
theme(legend.text=element_text(size=textSize-2))
#    theme(legend.direction='vertical')
return(plot)
}
makeIncidencePlot = function(ts){
yConst = 0.022
selectionDates = data.frame(date = seq(0,20), y = yConst+0.005, year = seq(0,20))
selectionDates = selectionDates[1:(nrow(selectionDates)-1),]
vaccineDates = data.frame(start = seq(0,19) + lag/365, end = seq(0,19) + (lag+window)/365, y= yConst, year = 1:20)
plot = ggplot(data = ts[ts$totalCases>2000,], aes(x=date,y=totalCases/5e7)) +
xlab('Year') +
ylab('Incidence') +
ylim(c(0,0.02)) +
geom_line() +
geom_segment(aes(x=0,xend=20, y=yConst, yend=yConst), size = 4, alpha=0.5, color = 'grey') +
geom_segment(data = vaccineDates, aes(x=start, xend = end, y = y, yend=y, color=year, size='Vaccine distribution')) +
scale_color_viridis(guide = FALSE) +
geom_point(data = selectionDates, aes(x=date, y= y, fill=year, size = 'Strain selection'), shape=25, stroke=0) +
scale_fill_viridis(guide=FALSE) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=.2)) +
theme(axis.ticks = element_line(size=.1))  +
scale_size_manual(name='', values=c('Vaccine distribution' = 4, 'Strain selection' = 2)) +
guides(size = guide_legend(override.aes = list(linetype=c(0,1), shape=c(25, NA), size = c(3,4), fill=c('black','black')))) +
plot_themes +
theme(legend.direction='horizontal', legend.box='horizontal') +
ylim(c(0,0.028))
return(plot)
}
makeMap = function(tips, vaccines){
range = c(min(c(tips$ag1, tips$ag2)), max(c(tips$ag1, tips$ag2)))
plot = ggplot(data = tips, aes(x=ag1,y=ag2)) +
xlab('AG1') +
ylab('AG2') +
xlim( c(mean(tips$ag1) - diff(range)/2, mean(tips$ag1) + diff(range)/2)) +
ylim( c(mean(tips$ag2) - diff(range)/2, mean(tips$ag2) + diff(range)/2)) +
geom_point(aes(color = year), size=2) +
scale_colour_continuous('Year',high='#de2d26',low='#fee0d2',guide=guide_colorbar(barwidth=11,barheight=0.5, title.position='left')) +
geom_point(data = vaccines, aes(fill = year), size=3, shape = 25, stroke=0) +
scale_fill_viridis(guide='none') +
theme(panel.border = element_rect(colour = "black", fill=NA, size=.2)) +
theme(axis.ticks = element_line(size=.1))  +
ylim(c(-3,3)) +
plot_themes
return(plot)
}
runId = 310
runDir = paste(resultsDir, 'results/',runId, sep='')
outDbname = paste(runDir,'/output.sqlite',sep='')
comboDb = dbConnect(SQLite(), dbname = outDbname)
initExtension(comboDb)
samplesDbname = paste(runDir,'/samples.sqlite',sep='')
samplesDb = dbConnect(SQLite(), dbname = samplesDbname)
initExtension(samplesDb)
vaccines = dbGetQuery(samplesDb, 'SELECT actualA, actualB FROM vaccines')
vaccines$year = (0:20)
names(vaccines) = c('ag1','ag2','year')
vaccines$ag1 = -vaccines$ag1
ts = dbGetQuery(comboDb, 'SELECT * FROM timeseries')
tips = dbGetQuery(comboDb, 'SELECT * FROM tips')
tips$ag1 = -tips$ag1
map = makeMap(tips, vaccines)
incidence = makeIncidencePlot(ts)
breadthPlot = makeBreadthPlot()
mutPlot = makeMutationPlot()
plotName = 'schematic'
plot = plot_grid(map, incidence, mutPlot, breadthPlot, labels = c('A','B','C','D'), align = 'h', ncol = 2)
save_plot(paste(plotDirectory,plotName,'.pdf',sep=''), plot, ncol=2, nrow = 2, base_aspect_ratio = 0.9)
getwd()
library(RSQLite)
library(ggplot2)
library(sensitivity)
library(gridExtra)
library(grid)
library(scales)
library(viridis)
library(plyr)
library(cowplot)
textSize = 12
pointSize = 1.0
lineSize = 1
plotDirectory='./'
resultsDir = '../../analysis/breadth_1_density/vaccine/'
plot_themes  = 	theme_classic() +
theme(axis.line = element_line(size=1)) +
theme(axis.ticks = element_line(size=0.5)) +
theme(axis.ticks.length = unit(-0.1,'cm')) +
theme(axis.title.x=element_text(size=textSize)) +
theme(axis.text.x=element_text(size= textSize, margin=margin(5,5,5,5,'pt'))) +
theme(axis.title.y=element_text(size= textSize)) +
theme(axis.text.y=element_text(size= textSize, margin=margin(5,5,5,5,'pt'))) +
theme(plot.title=element_text(size=textSize+2)) +
theme(plot.margin=unit(c(5,5,5,5),'mm')) +
theme(legend.title=element_text(size=textSize)) +
theme(legend.text=element_text(size=textSize)) +
theme(legend.position ='bottom') +
theme(legend.direction='horizontal') +
theme(legend.margin = unit(0.2,'cm')) +
theme(legend.box = "vertical") +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1)) +
theme(axis.line = element_blank())
lag = 300
window = 120
b = 0.5
s = 0.07
makeMutationPlot = function(){
delta.mean = .6
delta.sd = .3
alpha = (delta.mean*delta.mean)/(delta.sd*delta.sd)
beta = (delta.sd*delta.sd)/(delta.mean)
dat = rgamma(1e6, shape = alpha, rate=1/beta)
df = data.frame(dat)
df = data.frame(x=seq(0,4,length=1000))
plot = ggplot(df,aes(x=x)) +  stat_function(fun = dgamma, args = list(shape=alpha, rate = 1/beta)) +
xlab('Antigenic distance of mutation') +
ylab('Density') +
plot_themes
return(plot)
}
makeBreadthPlot = function() {
d = seq(0,20,length = 500)
P.I.nat = s * d
P.I.vac = s * d / b
df = data.frame(d,P.I.nat,P.I.vac)
df$P.I.nat = ifelse(P.I.nat>1, 1, P.I.nat)
df$P.I.vac = ifelse(P.I.vac>1, 1, P.I.vac)
plot = ggplot(data = df) +
geom_line(aes(x = d,y = P.I.vac, color = 'Vaccine'), size = 1) +
geom_line(aes(x = d,y = P.I.nat, color = 'Natural'), size = 1) +
xlab('Nearest antigenic distance') +
ylab('Pr(infection | contact)') +
scale_color_manual(name='Type of immunity', values=c('Natural' = 'red', 'Vaccine' = 'purple')) +
guides(colour = guide_legend(override.aes = list(linetype=c(1,1)), title.position = 'top')) +
plot_themes +
theme(legend.direction='vertical') +
theme(legend.position=c(.7,.2))+
theme(legend.title=element_text(size=textSize-2)) +
theme(legend.text=element_text(size=textSize-2))
#    theme(legend.direction='vertical')
return(plot)
}
makeIncidencePlot = function(ts){
yConst = 0.022
selectionDates = data.frame(date = seq(0,20), y = yConst+0.005, year = seq(0,20))
selectionDates = selectionDates[1:(nrow(selectionDates)-1),]
vaccineDates = data.frame(start = seq(0,19) + lag/365, end = seq(0,19) + (lag+window)/365, y= yConst, year = 1:20)
plot = ggplot(data = ts[ts$totalCases>2000,], aes(x=date,y=totalCases/5e7)) +
xlab('Year') +
ylab('Incidence') +
ylim(c(0,0.02)) +
geom_line() +
geom_segment(aes(x=0,xend=20, y=yConst, yend=yConst), size = 4, alpha=0.5, color = 'grey') +
geom_segment(data = vaccineDates, aes(x=start, xend = end, y = y, yend=y, color=year, size='Vaccine distribution')) +
scale_color_viridis(guide = FALSE) +
geom_point(data = selectionDates, aes(x=date, y= y, fill=year, size = 'Strain selection'), shape=25, stroke=0) +
scale_fill_viridis(guide=FALSE) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=.2)) +
theme(axis.ticks = element_line(size=.1))  +
scale_size_manual(name='', values=c('Vaccine distribution' = 4, 'Strain selection' = 2)) +
guides(size = guide_legend(override.aes = list(linetype=c(0,1), shape=c(25, NA), size = c(3,4), fill=c('black','black')))) +
plot_themes +
theme(legend.direction='horizontal', legend.box='horizontal') +
ylim(c(0,0.028))
return(plot)
}
makeMap = function(tips, vaccines){
range = c(min(c(tips$ag1, tips$ag2)), max(c(tips$ag1, tips$ag2)))
plot = ggplot(data = tips, aes(x=ag1,y=ag2)) +
xlab('AG1') +
ylab('AG2') +
xlim( c(mean(tips$ag1) - diff(range)/2, mean(tips$ag1) + diff(range)/2)) +
ylim( c(mean(tips$ag2) - diff(range)/2, mean(tips$ag2) + diff(range)/2)) +
geom_point(aes(color = year), size=2) +
scale_colour_continuous('Year',high='#de2d26',low='#fee0d2',guide=guide_colorbar(barwidth=11,barheight=0.5, title.position='left')) +
geom_point(data = vaccines, aes(fill = year), size=3, shape = 25, stroke=0) +
scale_fill_viridis(guide='none') +
theme(panel.border = element_rect(colour = "black", fill=NA, size=.2)) +
theme(axis.ticks = element_line(size=.1))  +
ylim(c(-3,3)) +
plot_themes
return(plot)
}
runId = 310
runDir = paste(resultsDir, 'results/',runId, sep='')
outDbname = paste(runDir,'/output.sqlite',sep='')
comboDb = dbConnect(SQLite(), dbname = outDbname)
initExtension(comboDb)
samplesDbname = paste(runDir,'/samples.sqlite',sep='')
samplesDb = dbConnect(SQLite(), dbname = samplesDbname)
initExtension(samplesDb)
vaccines = dbGetQuery(samplesDb, 'SELECT actualA, actualB FROM vaccines')
vaccines$year = (0:20)
names(vaccines) = c('ag1','ag2','year')
vaccines$ag1 = -vaccines$ag1
ts = dbGetQuery(comboDb, 'SELECT * FROM timeseries')
tips = dbGetQuery(comboDb, 'SELECT * FROM tips')
tips$ag1 = -tips$ag1
map = makeMap(tips, vaccines)
incidence = makeIncidencePlot(ts)
breadthPlot = makeBreadthPlot()
mutPlot = makeMutationPlot()
plotName = 'schematic'
plot = ggdraw(xlim=c(0,1), ylim=c(0,1.7)) +
draw_plot(map, 0, 1.1, width=1, height=0.4) +
draw_plot(incidence, 0, .6, width=1, height=0.4) +
draw_plot(breadthPlot, 0, 0, .5, .6) +
draw_plot(mutPlot, .5, 0, .5, .6) +
draw_plot_label(c("A", "B", "C", "D"), c(0, 0, 0, .5), c(1.7, 1.1, .6, .6), size = 15)
save_plot(paste(plotDirectory,plotName,'.pdf',sep=''), plot, ncol=2, nrow = 2, base_aspect_ratio = 0.9)

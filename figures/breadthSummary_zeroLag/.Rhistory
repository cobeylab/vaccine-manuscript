test_data = vaccineDF %>%
group_by(vaccineImmuneBreadth, vaccinationRate) %>%
summarize(replicates = n(),
counts = sum(cumulativeDrift >= drift.cutoff | tmrcaLimit == 1)) %>%
arrange(vaccinationRate, vaccineImmuneBreadth) %>%
ungroup()
novac.counts = novac_data %>%
filter(cumulativeDrift >= drift.cutoff | tmrcaLimit == 1) %>%
nrow()
novac.replicates = nrow(novac_data)
test_data$pval = NA
for(j in 1:nrow(test_data)){
test_data$pval[j] = fisher.test(matrix(c(novac.counts, novac.replicates - novac.counts,
test_data$counts[j], test_data$replicates[j]-test_data$counts[j]), nrow=2),
alternative = 'less')$p.value
}
test_data$cutoff = drift.cutoff
#z$pval[z$counts < novac.counts] = 1
test_data$novac = novac.counts
tests[[i]] = test_data
i=i+1
}
out = do.call(rbind, tests) %>%
select(vaccineImmuneBreadth, vaccinationRate, counts, replicates, novac, pval, cutoff) %>%
mutate(significant = ifelse(pval<.05, 1, 0))
CUTOFFS = unique(out$cutoff)
for(this.cutoff in CUTOFFS){
out.plot = ggplot(out %>%
filter(cutoff == this.cutoff, vaccinationRate>0) %>%
mutate(vaccineImmuneBreadth = paste('b =', vaccineImmuneBreadth)),
aes(x=vaccinationRate, y = counts/replicates)) +
geom_bar(stat='identity', aes(fill = factor(significant))) +
scale_fill_manual(values = c('grey50', 'red'), guide=FALSE) +
facet_wrap(~vaccineImmuneBreadth) +
geom_hline(aes(yintercept = novac/novac.replicates)) +
#ggtitle(paste('>', this.cutoff,' a.u. cumulative evolution, including TMRCA > 10 years\nLine shows counts from unvaccinated sims\nRed bars show significantly more frequent excess evolution compared to no vaccination', sep='')) +
ylab('Number of simulations with excessive evolution\n
(>21 a.u. cumulative evolution or TMRCA > 10 years, n=500)')+
xlab('Annual vaccination coverage')
save_plot(paste('cutoffs_withTMRCA/',this.cutoff,'_cutoff.pdf', sep=''),out.plot, base_aspect_ratio = 1.2, base_height =7.5)
}
#
# head(vaccineDF)
# tmrcatest = vaccineDF %>% group_by(vaccinationRate, vaccineImmuneBreadth) %>%
#   summarize(tmrcaLimit =log( sum(fluLike)/sum(tmrcaLimit))) %>% data.frame() %>% mutate(vaccinationRate = vaccinationRate*365)
# fit = lm(tmrcaLimit ~ vaccinationRate*vaccineImmuneBreadth, data= tmrcatest %>% filter(is.finite(tmrcaLimit)))
# summary(fit)
# breadthplot = ggplot(tmrcatest, aes(x=vaccineImmuneBreadth, y=tmrcaLimit)) +
#   geom_point() + #facet_wrap(~vaccineImmuneBreadth, scale = 'free') +
#   geom_smooth(method= 'lm') +
#   ylab('Log ratio Flu-like:TMRCA fraction')
# rateplot = ggplot(tmrcatest, aes(x=vaccinationRate, y=tmrcaLimit)) +
#   geom_point() + #facet_wrap(~vaccineImmuneBreadth, scale = 'free')
#   geom_smooth(method= 'lm') +
#   ylab('Log ratio Flu-like:TMRCA fraction')
# tab = ggtexttable(round(summary(fit)$coefficients,2))
#
# plot_grid(rateplot, breadthplot, tab, nrow=2, rel_widths = c(1,1,2))
# unique(vaccineDF$vaccinationRate)[1]
#
# novac  = vaccineDF %>% filter(vaccinationRate==0, tmrcaLimit ==0, cumulativeDrift > 21)
# vac2 = vaccineDF%>% filter(vaccinationRate == unique(vaccineDF$vaccinationRate)[10],
#                            vaccineImmuneBreadth==0.05, cumulativeDrift > 21)
# qqplot(novac$cumulativeDrift, vac2$cumulativeDrift, xlim=c(20,30), ylim=c(20,30))
# abline(a=0,b=1)
setwd("/Volumes/frankwen-1/vaccine-manuscript/figures/multimodal")
setwd("/Volumes/frankwen-1/vaccine-manuscript/figures/multimodal")
library(RSQLite)
library(ggplot2)
library(sensitivity)
library(gridExtra)
library(grid)
library(scales)
library(viridis)
library(plyr)
library(cowplot)
textSize = 12
pointSize = 1.0
lineSize = 1
plotDirectory='./plots'
plot_themes  = 	theme_classic() +
theme(axis.line = element_line(size=1)) +
theme(axis.ticks = element_line(size=0.5)) +
theme(axis.ticks.length = unit(-0.1,'cm')) +
theme(axis.title.x=element_text(size=textSize)) +
theme(axis.text.x=element_text(size= textSize, margin=margin(5,5,5,5,'pt'))) +
theme(axis.title.y=element_text(size= textSize)) +
theme(axis.text.y=element_text(size= textSize, margin=margin(5,5,5,5,'pt'))) +
theme(plot.title=element_text(size=textSize+2)) +
theme(plot.margin=unit(c(5,5,5,5),'mm')) +
theme(legend.title=element_text(size=textSize)) +
theme(legend.text=element_text(size=textSize)) +
theme(legend.position ='bottom') +
theme(legend.direction='horizontal') +
theme(legend.margin = unit(0,'cm')) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1)) +
theme(axis.line = element_blank())
resultsDirs = c('../../analysis/breadth_1_density/vaccine/','../../analysis/breadth_low_density/vaccine/')
for(dir in resultsDirs){
resultsDb = paste(dir,'results.sqlite',sep='')
comboDb = dbConnect(SQLite(), dbname = resultsDb)
initExtension(comboDb)
if(dir == resultsDirs[1]){
vaccineDF = dbGetQuery(comboDb, 'SELECT * FROM pooled_results')
}
else{
df2 = dbGetQuery(comboDb, 'SELECT * FROM pooled_results')
}
}
completeDF = rbind(vaccineDF, df2)
completeDF = format.data(completeDF)
vaccineDF = completeDF[completeDF$tmrcaLimit == 0,]
multimodal.plots = list()
i=1
for(breadth in sort(unique(vaccineDF$vaccineImmuneBreadth))){
xdf = vaccineDF[vaccineDF$vaccineImmuneBreadth==breadth,]
x=vaccineDF[vaccineDF$vaccineImmuneBreadth==breadth,]$cumulativeDrift
plot1 = ggplot(vaccineDF[vaccineDF$vaccineImmuneBreadth==breadth,]) +
geom_freqpoly(aes(x=cumulativeDrift, color = vaccinationRate, group=vaccinationRate), binwidth=1.5) +
scale_color_viridis() +
guides(color=guide_colorbar(barwidth=11,barheight=0.5, title.position = 'top', title = 'Annual vaccination rate')) +
plot_themes +
ggtitle(paste("Breadth = ",breadth,sep='')) +
theme(plot.title = element_text(hjust=0)) + xlab('Cumulative antigenic evolution') + ylim(0,400)
multimodal.plots[[i]] = plot1
i=i+1
}
plot = plot_grid(plotlist=multimodal.plots, align = 'h', ncol = 2)
plotName = 'multimodal'
save_plot(paste(plotName,'.pdf',sep=''), plot, ncol=2, nrow = 4, base_aspect_ratio = 1)
rates = sort(unique(xdf$vaccinationRate))
for(i in 1:length(rates)){
rate = rates[i]
test=  wilcox.test(vaccineDF$cumulativeDrift[vaccineDF$cumulativeDrift>12 & vaccineDF$vaccinationRate==0], xdf$cumulativeDrift[xdf$cumulativeDrift>12 & xdf$vaccinationRate==rate])
print(paste(rate,':',test$p.value))
}
multimodal.plots = list()
i=1
for(breadth in sort(unique(vaccineDF$vaccineImmuneBreadth))){
xdf = vaccineDF[vaccineDF$vaccineImmuneBreadth==breadth,]
x=vaccineDF[vaccineDF$vaccineImmuneBreadth==breadth,]$cumulativeDrift
plot1 = ggplot(vaccineDF[vaccineDF$vaccineImmuneBreadth==breadth,]) +
geom_freqpoly(aes(x=cumulativeDrift, color = vaccinationRate, group=vaccinationRate), binwidth=1.5) +
scale_color_viridis() +
guides(color=guide_colorbar(barwidth=11,barheight=0.5, title.position = 'top', title = 'Annual vaccination coverage')) +
plot_themes +
ggtitle(paste("Breadth = ",breadth,sep='')) +
theme(plot.title = element_text(hjust=0)) + xlab('Cumulative antigenic evolution') + ylim(0,400)
multimodal.plots[[i]] = plot1
i=i+1
}
plot = plot_grid(plotlist=multimodal.plots, align = 'h', ncol = 2)
plotName = 'multimodal'
save_plot(paste(plotName,'.pdf',sep=''), plot, ncol=2, nrow = 4, base_aspect_ratio = 1)
setwd("/Volumes/frankwen-1/vaccine-manuscript/figures/multimodal")
n_replicates = vaccineDF %>%
group_by(vaccinationRate, vaccineImmuneBreadth) %>%
summarise(counts = n()) %>%
pull(counts) #%>%
setwd("/Volumes/frankwen-1/vaccine-manuscript/figures/multimodal")
# test for skewness of distributions
library(tidyverse)
library(RSQLite)
library(cowplot)
get_data = function(filename){
comboDb = dbConnect(SQLite(), dbname = filename)
initExtension(comboDb)
vaccineDF = dbGetQuery(comboDb, 'SELECT * FROM pooled_results')
dbDisconnect(comboDb)
return(vaccineDF)
}
resultsDirs = c('../../analysis/breadth_low_density/vaccine/','../../analysis/breadth_1_density/vaccine/')
vaccineDF = resultsDirs %>%
paste0(.,'results.sqlite') %>%
map_dfr(get_data)
n_replicates = vaccineDF %>%
group_by(vaccinationRate, vaccineImmuneBreadth) %>%
summarise(counts = n()) %>%
pull(counts) #%>%
unique()
start = 21; end=21
drift.ranges = seq(start, end, length=(end-start)+1)
tests = vector('list', length(drift.ranges))
i=1
novac_data = vaccineDF %>%
filter(vaccinationRate==0)
mean_novac_drift = novac_data %>% filter(tmrcaLimit == 0) %>% pull(cumulativeDrift) %>% mean()
mean_novac_inc = novac_data %>% filter(tmrcaLimit == 0) %>% pull(cumulativeIncidence) %>% mean()
for(drift.cutoff in drift.ranges){
test_data = vaccineDF %>%
group_by(vaccineImmuneBreadth, vaccinationRate) %>%
summarize(replicates = n(),
counts = sum(cumulativeDrift >= drift.cutoff | tmrcaLimit == 1)) %>%
arrange(vaccinationRate, vaccineImmuneBreadth) %>%
ungroup()
novac.counts = novac_data %>%
filter(cumulativeDrift >= drift.cutoff | tmrcaLimit == 1) %>%
nrow()
novac.replicates = nrow(novac_data)
test_data$pval = NA
for(j in 1:nrow(test_data)){
test_data$pval[j] = fisher.test(matrix(c(novac.counts, novac.replicates - novac.counts,
test_data$counts[j], test_data$replicates[j]-test_data$counts[j]), nrow=2),
alternative = 'less')$p.value
}
test_data$cutoff = drift.cutoff
#z$pval[z$counts < novac.counts] = 1
test_data$novac = novac.counts
tests[[i]] = test_data
i=i+1
}
out = do.call(rbind, tests) %>%
select(vaccineImmuneBreadth, vaccinationRate, counts, replicates, novac, pval, cutoff) %>%
mutate(significant = ifelse(pval<.05, 1, 0))
CUTOFFS = unique(out$cutoff)
for(this.cutoff in CUTOFFS){
out.plot = ggplot(out %>%
filter(cutoff == this.cutoff, vaccinationRate>0) %>%
mutate(vaccineImmuneBreadth = paste('b =', vaccineImmuneBreadth)),
aes(x=vaccinationRate, y = counts/replicates)) +
geom_bar(stat='identity', aes(fill = factor(significant))) +
scale_fill_manual(values = c('grey50', 'red'), guide=FALSE) +
facet_wrap(~vaccineImmuneBreadth) +
geom_hline(aes(yintercept = novac/novac.replicates)) +
#ggtitle(paste('>', this.cutoff,' a.u. cumulative evolution, including TMRCA > 10 years\nLine shows counts from unvaccinated sims\nRed bars show significantly more frequent excess evolution compared to no vaccination', sep='')) +
ylab('Number of simulations with excessive evolution\n
(>21 a.u. cumulative evolution or TMRCA > 10 years, n=500)')+
xlab('Annual vaccination coverage')
save_plot(paste('cutoffs_withTMRCA/',this.cutoff,'_cutoff.pdf', sep=''),out.plot, base_aspect_ratio = 1.2, base_height =7.5)
}
#
# head(vaccineDF)
# tmrcatest = vaccineDF %>% group_by(vaccinationRate, vaccineImmuneBreadth) %>%
#   summarize(tmrcaLimit =log( sum(fluLike)/sum(tmrcaLimit))) %>% data.frame() %>% mutate(vaccinationRate = vaccinationRate*365)
# fit = lm(tmrcaLimit ~ vaccinationRate*vaccineImmuneBreadth, data= tmrcatest %>% filter(is.finite(tmrcaLimit)))
# summary(fit)
# breadthplot = ggplot(tmrcatest, aes(x=vaccineImmuneBreadth, y=tmrcaLimit)) +
#   geom_point() + #facet_wrap(~vaccineImmuneBreadth, scale = 'free') +
#   geom_smooth(method= 'lm') +
#   ylab('Log ratio Flu-like:TMRCA fraction')
# rateplot = ggplot(tmrcatest, aes(x=vaccinationRate, y=tmrcaLimit)) +
#   geom_point() + #facet_wrap(~vaccineImmuneBreadth, scale = 'free')
#   geom_smooth(method= 'lm') +
#   ylab('Log ratio Flu-like:TMRCA fraction')
# tab = ggtexttable(round(summary(fit)$coefficients,2))
#
# plot_grid(rateplot, breadthplot, tab, nrow=2, rel_widths = c(1,1,2))
# unique(vaccineDF$vaccinationRate)[1]
#
# novac  = vaccineDF %>% filter(vaccinationRate==0, tmrcaLimit ==0, cumulativeDrift > 21)
# vac2 = vaccineDF%>% filter(vaccinationRate == unique(vaccineDF$vaccinationRate)[10],
#                            vaccineImmuneBreadth==0.05, cumulativeDrift > 21)
# qqplot(novac$cumulativeDrift, vac2$cumulativeDrift, xlim=c(20,30), ylim=c(20,30))
# abline(a=0,b=1)
setwd("/Volumes/frankwen-1/vaccine-manuscript/figures/breadthSummary")
library(RSQLite)
library(ggplot2)
library(sensitivity)
library(gridExtra)
library(grid)
library(scales)
library(viridis)
library(plyr)
library(cowplot)
textSize = 12
pointSize = 1.0
lineSize = 1
plotDirectory='./plots'
plot_themes  = 	theme_classic() +
theme(axis.line = element_line(size=1)) +
theme(axis.ticks = element_line(size=0.5)) +
theme(axis.ticks.length = unit(-0.1,'cm')) +
theme(axis.title.x=element_text(size=textSize)) +
theme(axis.text.x=element_text(size= textSize, margin=margin(5,5,5,5,'pt'))) +
theme(axis.title.y=element_text(size= textSize)) +
theme(axis.text.y=element_text(size= textSize, margin=margin(5,5,5,5,'pt'))) +
theme(plot.title=element_text(size=textSize+2)) +
theme(plot.margin=unit(c(5,5,5,5),'mm')) +
theme(legend.title=element_text(size=textSize)) +
theme(legend.text=element_text(size=textSize)) +
theme(legend.position ='bottom') +
theme(legend.direction='horizontal') +
theme(legend.margin = unit(0,'cm')) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1)) +
theme(axis.line = element_blank())
single.plot = function(df, x, y, ylab, ylim, p.val){
plot = ggplot(data = df, aes_string(x = x, y = y)) +
xlab('Vaccination coverage') +
ylab(ylab) +
geom_line(aes(group = vaccineImmuneBreadth, colour = vaccineImmuneBreadth), size=0.4) +
geom_point(aes_string(alpha = p.val, colour = 'vaccineImmuneBreadth'), size=0.3, show.legend = FALSE) +
geom_hline(yintercept = mean(df[,y][df$vaccinationRate==0]), alpha = 0.5, linetype = 'longdash', size=0.2) +
scale_color_viridis(begin = 0, end = 0.9) +
guides(colour= guide_colourbar('Vaccine immune breadth',title.position='bottom',barwidth=11,barheight=0.5)) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=.2)) +
theme(axis.ticks = element_line(size=.1))  +
ylim(ylim) +
plot_themes
return(plot)
}
makePlot = function(summaryDF, fluDF, plotName){
plot1 = single.plot(df = summaryDF, x='vaccinationRate', y='meanDrift', ylab = 'Cumulative antigenic evolution',ylim=c(0,25), p.val = 'drift.p')
plot2 = single.plot(df = summaryDF, x='vaccinationRate', y='meanInc', ylab = 'Cumulative incidence',ylim=c(0,2), p.val = 'inc.p')
plot3 = single.plot(df = fluDF, x='vaccinationRate', y='meanDrift', ylab = 'Cumulative antigenic evolution',ylim=c(17,29.5), p.val = 'drift.p')
plot4 = single.plot(df = fluDF, x='vaccinationRate', y='meanInc', ylab = 'Cumulative incidence',ylim=c(0.65,2.2), p.val = 'inc.p')
plot = plot_grid(plot1, plot2, plot3, plot4, labels = c('A','B','C','D'), align = 'h', ncol = 2)
print(plot)
save_plot(paste(plotName,'.pdf',sep=''), plot, ncol=2, nrow = 2, base_aspect_ratio = 0.85)
}
summarize.df = function(df){
zeroDF = df[df$vaccinationRate==0,]
out.df = ddply(df, .(vaccinationRate, vaccineImmuneBreadth), here(summarise),
meanDrift = mean(cumulativeDrift),
meanInc = mean(cumulativeIncidence),
count = sum(cumulativeDrift)/mean(cumulativeDrift),
drift.p.greater = wilcox.test(cumulativeDrift, zeroDF$cumulativeDrift, alternative='greater')$p.value,
drift.p.less = 1-drift.p.greater,
inc.p.greater = wilcox.test(cumulativeIncidence, zeroDF$cumulativeIncidence, alternative='greater')$p.value,
inc.p.less = 1-inc.p.greater,
drift.p = as.numeric(min(drift.p.greater, drift.p.less) < 0.05 & count >= 5),
inc.p = as.numeric(min(drift.p.greater, drift.p.less) < 0.05 & count >= 5)
)
return(out.df)
}
format.data = function(vaccineDF){
vaccineDF = vaccineDF[vaccineDF$vaccineImmuneBreadth %in% c(1, 0.3,0.2, 0.1, 0.05,.5,.7),]
vaccineDF$cumulativeIncidence = vaccineDF$cumulativeIncidence/50000000
return(vaccineDF)
}
resultsDirs = c('../../analysis/breadth_1_density/vaccine/','../../analysis/breadth_low_density/vaccine/')
for(dir in resultsDirs){
resultsDb = paste(dir,'results.sqlite',sep='')
comboDb = dbConnect(SQLite(), dbname = resultsDb)
initExtension(comboDb)
if(dir == resultsDirs[1]){
vaccineDF = dbGetQuery(comboDb, 'SELECT * FROM pooled_results')
}
else{
df2 = dbGetQuery(comboDb, 'SELECT * FROM pooled_results')
}
}
completeDF = rbind(vaccineDF, df2)
completeDF = format.data(completeDF)
vaccineDF = completeDF[completeDF$tmrcaLimit == 0,]
summaryDF = summarize.df(vaccineDF)
fluDF = summarize.df(vaccineDF[vaccineDF$fluLike==1,])
makePlot(summaryDF, fluDF, 'breadthSummary')
plot = (plot1+plot2)/(plot3+plot4) + plot_layout(guides = "collect") & theme(legend.position = 'bottom')
makePlot = function(summaryDF, fluDF, plotName){
plot1 = single.plot(df = summaryDF, x='vaccinationRate', y='meanDrift', ylab = 'Cumulative antigenic evolution',ylim=c(0,25), p.val = 'drift.p')
plot2 = single.plot(df = summaryDF, x='vaccinationRate', y='meanInc', ylab = 'Cumulative incidence',ylim=c(0,2), p.val = 'inc.p')
plot3 = single.plot(df = fluDF, x='vaccinationRate', y='meanDrift', ylab = 'Cumulative antigenic evolution',ylim=c(17,29.5), p.val = 'drift.p')
plot4 = single.plot(df = fluDF, x='vaccinationRate', y='meanInc', ylab = 'Cumulative incidence',ylim=c(0.65,2.2), p.val = 'inc.p')
plot = (plot1+plot2)/(plot3+plot4) + plot_layout(guides = "collect") & theme(legend.position = 'bottom')
#plot_grid(plot1, plot2, plot3, plot4, labels = c('A','B','C','D'), align = 'h', ncol = 2)
print(plot)
save_plot(paste(plotName,'.pdf',sep=''), plot, ncol=2, nrow = 2, base_aspect_ratio = 0.85)
}
makePlot(summaryDF, fluDF, 'breadthSummary')
single.plot = function(df, x, y, ylab, ylim, p.val){
plot = ggplot(data = df, aes_string(x = x, y = y)) +
xlab('Vaccination coverage') +
ylab(ylab) +
geom_line(aes(group = vaccineImmuneBreadth, colour = vaccineImmuneBreadth), size=0.4) +
geom_point(aes_string(alpha = p.val, colour = 'vaccineImmuneBreadth'), size=0.3, show.legend = FALSE) +
geom_hline(yintercept = mean(df[,y][df$vaccinationRate==0]), alpha = 0.5, linetype = 'longdash', size=0.2) +
scale_color_viridis(begin = 0, end = 0.9) +
guides(colour= guide_colourbar('Vaccine immune breadth',title.position='bottom',barwidth=11,barheight=0.5)) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=.2)) +
theme(axis.ticks = element_line(size=.1))  +
ylim(ylim) +
plot_themes
return(plot)
}
makePlot = function(summaryDF, fluDF, plotName){
plot1 = single.plot(df = summaryDF, x='vaccinationRate', y='meanDrift', ylab = 'Cumulative antigenic evolution',ylim=c(0,25), p.val = 'drift.p')
plot2 = single.plot(df = summaryDF, x='vaccinationRate', y='meanInc', ylab = 'Cumulative incidence',ylim=c(0,2), p.val = 'inc.p')
plot3 = single.plot(df = fluDF, x='vaccinationRate', y='meanDrift', ylab = 'Cumulative antigenic evolution',ylim=c(17,29.5), p.val = 'drift.p')
plot4 = single.plot(df = fluDF, x='vaccinationRate', y='meanInc', ylab = 'Cumulative incidence',ylim=c(0.65,2.2), p.val = 'inc.p')
plot = (plot1+plot2)/(plot3+plot4) + plot_layout(guides = "collect") & theme(legend.position = 'bottom')
#plot_grid(plot1, plot2, plot3, plot4, labels = c('A','B','C','D'), align = 'h', ncol = 2)
print(plot)
save_plot(paste(plotName,'.pdf',sep=''), plot, ncol=2, nrow = 2, base_aspect_ratio = 0.85)
}
summarize.df = function(df){
zeroDF = df[df$vaccinationRate==0,]
out.df = ddply(df, .(vaccinationRate, vaccineImmuneBreadth), here(summarise),
meanDrift = mean(cumulativeDrift),
meanInc = mean(cumulativeIncidence),
count = sum(cumulativeDrift)/mean(cumulativeDrift),
drift.p.greater = wilcox.test(cumulativeDrift, zeroDF$cumulativeDrift, alternative='greater')$p.value,
drift.p.less = 1-drift.p.greater,
inc.p.greater = wilcox.test(cumulativeIncidence, zeroDF$cumulativeIncidence, alternative='greater')$p.value,
inc.p.less = 1-inc.p.greater,
drift.p = as.numeric(min(drift.p.greater, drift.p.less) < 0.05 & count >= 5),
inc.p = as.numeric(min(drift.p.greater, drift.p.less) < 0.05 & count >= 5)
)
return(out.df)
}
format.data = function(vaccineDF){
vaccineDF = vaccineDF[vaccineDF$vaccineImmuneBreadth %in% c(1, 0.3,0.2, 0.1, 0.05,.5,.7),]
vaccineDF$cumulativeIncidence = vaccineDF$cumulativeIncidence/50000000
return(vaccineDF)
}
resultsDirs = c('../../analysis/breadth_1_density/vaccine/','../../analysis/breadth_low_density/vaccine/')
for(dir in resultsDirs){
resultsDb = paste(dir,'results.sqlite',sep='')
comboDb = dbConnect(SQLite(), dbname = resultsDb)
initExtension(comboDb)
if(dir == resultsDirs[1]){
vaccineDF = dbGetQuery(comboDb, 'SELECT * FROM pooled_results')
}
else{
df2 = dbGetQuery(comboDb, 'SELECT * FROM pooled_results')
}
}
library(patchwork)
completeDF = rbind(vaccineDF, df2)
completeDF = format.data(completeDF)
vaccineDF = completeDF[completeDF$tmrcaLimit == 0,]
summaryDF = summarize.df(vaccineDF)
fluDF = summarize.df(vaccineDF[vaccineDF$fluLike==1,])
makePlot(summaryDF, fluDF, 'breadthSummary')
setwd("/Volumes/frankwen-1/vaccine-manuscript/figures/multimodal")
multimodal.plots = list()
i=1
for(breadth in sort(unique(vaccineDF$vaccineImmuneBreadth))){
xdf = vaccineDF[vaccineDF$vaccineImmuneBreadth==breadth,]
x=vaccineDF[vaccineDF$vaccineImmuneBreadth==breadth,]$cumulativeDrift
plot1 = ggplot(vaccineDF[vaccineDF$vaccineImmuneBreadth==breadth,]) +
geom_freqpoly(aes(x=cumulativeDrift, color = vaccinationRate, group=vaccinationRate), binwidth=1.5) +
scale_color_viridis() +
guides(color=guide_colorbar(barwidth=11,barheight=0.5, title.position = 'top', title = 'Annual vaccination coverage')) +
plot_themes +
ggtitle(paste("Breadth = ",breadth,sep='')) +
theme(plot.title = element_text(hjust=0)) + xlab('Cumulative antigenic evolution') + ylim(0,400)
multimodal.plots[[i]] = plot1
i=i+1
}
plot = wrap_plots(multimodal.plots, ncol = 2) + plot_layout(guides = "collect") & theme(legend.position = 'bottom')
plot
plotName = 'multimodal'
setwd("/Volumes/frankwen-1/vaccine-manuscript/figures/multimodal")
save_plot(paste(plotName,'.pdf',sep=''), plot, ncol=2, nrow = 4, base_aspect_ratio = 1)
setwd("/Volumes/frankwen-1/vaccine-manuscript/figures/status")
setwd("/Volumes/frankwen-1/vaccine-manuscript/figures/status")
library(RSQLite)
library(tidyverse)
library(cowplot)
library(viridis)
textSize = 12
pointSize = 1.0
lineSize = 1
plotDirectory='./plots'
plot_themes  = 	theme_classic() +
theme(axis.line = element_line(size=1)) +
theme(axis.ticks = element_line(size=0.5)) +
theme(axis.ticks.length = unit(-0.1,'cm')) +
theme(axis.title.x=element_text(size=textSize)) +
theme(axis.text.x=element_text(size= textSize, margin=margin(5,5,5,5,'pt'))) +
theme(axis.title.y=element_text(size= textSize)) +
theme(axis.text.y=element_text(size= textSize, margin=margin(5,5,5,5,'pt'))) +
theme(plot.title=element_text(size=textSize+2)) +
theme(plot.margin=unit(c(5,5,5,5),'mm')) +
theme(legend.title=element_text(size=textSize)) +
theme(legend.text=element_text(size=textSize)) +
theme(legend.position ='bottom') +
theme(legend.direction='horizontal') +
theme(legend.margin = unit(0,'cm')) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=1)) +
theme(axis.line = element_blank())
status.plot = function(df, status, ylab){
plot = ggplot(df, aes_string(x='vaccinationRate', y = status)) +
xlab('Vaccination coverage') +
ylab(ylab) +
geom_line(aes(group = vaccineImmuneBreadth, colour = vaccineImmuneBreadth), size=0.4) +
#geom_point(aes_string(alpha = p.val, colour = 'vaccineImmuneBreadth'), size=0.3, show.legend = FALSE) +
scale_color_viridis(begin = 0, end = 0.9) +
guides(colour= guide_colourbar('Vaccine immune breadth',title.position='bottom',barwidth=11,barheight=0.5)) +
theme(panel.border = element_rect(colour = "black", fill=NA, size=.2)) +
theme(axis.ticks = element_line(size=.1))  +
ylim(c(0,1)) +
plot_themes
return(plot)
}
make.status.plot = function(statusDF, plotName){
plot1 = status.plot(statusDF,'fluLike','Fraction influenza-like')
plot2 = status.plot(statusDF,'extinct','Fraction extinct')
plot3 = status.plot(statusDF,'excessDiv','Fraction TMRCA > 10 years')
plot = plot1 + plot2 + plot3 + plot_layout(guides = "collect") & theme(legend.position = 'bottom')
# plot_grid(plot1, plot2, plot3, labels = c('A','B','C'), align = 'h', ncol = 3)
save_plot(paste(plotName,'.pdf',sep=''), plot, ncol=3, nrow = 1, base_aspect_ratio = 0.85)
}
get_data = function(filename){
comboDb = dbConnect(SQLite(), dbname = filename)
initExtension(comboDb)
vaccineDF = dbGetQuery(comboDb, 'SELECT * FROM pooled_results')
dbDisconnect(comboDb)
return(vaccineDF)
}
resultsDirs = c('../../analysis/breadth_1_density/vaccine/','../../analysis/breadth_low_density/vaccine/')
vaccineDF = resultsDirs %>%
paste0(.,'results.sqlite') %>%
map_dfr(get_data)
statusDF = vaccineDF %>%
group_by(vaccinationRate, vaccineImmuneBreadth) %>%
dplyr::summarise(total = sum(tmrcaLimit, fluLike, extinct),
excessDiv = sum(tmrcaLimit)/total,
fluLike= sum(fluLike)/total,
extinct = sum(extinct)/total)
make.status.plot(statusDF,'status')
setwd("/Volumes/frankwen-1/vaccine-manuscript/figures/breadthSummary_zeroLag")
